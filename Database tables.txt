CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    firstname VARCHAR(100) NOT NULL,
    lastname VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(20),
    country VARCHAR(100),
    profile_picture VARCHAR(500),
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

One Contact entry is related to exactly one User (the owner).

One Message is related to one User (the sender).

One ChatParticipant is related to one Chat and one User.


[User]
 ┌───────────────┐
 │ id (PK)       │
 │ firstname     │
 │ lastname      │
 │ email         │
 │ phone         │
 │ country       │
 │ profile_image │
 │ password      │
 └───────────────┘
        ▲
        │
        │
        │
 ┌──────┴──────────┐
 │   Contact       │
 └─────────────────┘
 │ id (PK)         │
 │ user_id (FK) ─────────┐
 │ contact_id (FK) ──────┘
 │ status          │
 │ created_at      │
 └─────────────────┘

[Chat]
 ┌──────────────┐
 │ id (PK)      │
 │ name         │
 │ is_group     │
 │ created_at   │
 └──────────────┘
       ▲
       │
 ┌─────┴─────────────┐
 │ ChatParticipant   │
 └───────────────────┘
 │ id (PK)           │
 │ chat_id (FK) ─────────► Chat
 │ user_id (FK) ─────────► User
 │ joined_at         │
 └───────────────────┘

[Message]
 ┌────────────────┐
 │ id (PK)        │
 │ chat_id (FK) ─────► Chat
 │ sender_id (FK) ───► User
 │ content         │
 │ message_type    │
 │ sent_at         │
 │ is_read         │
 └────────────────┘

Table	Purpose
User	Stores account info: name, email, password, etc.
Contact	Stores the friend/contact list for each user.
Chat	Represents a conversation — either a group or one-to-one.
ChatParticipant	Who is inside each chat. One-to-many relationship between chats and users.
Message	Stores every message sent (content, sender, chat, time, type).

----------------------------------------___________________________________________________________________
REST API:

User authentication (login/register)

Fetch user profile, contacts list

Send invitations / manage contacts

WebSocket:

Send and receive chat messages instantly

Notify about typing status, message read receipts

Real-time conversation updates


